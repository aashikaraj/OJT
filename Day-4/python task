import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

# Constants
HEIGHT = 10  # Initial height of the ball
GRAVITY = 9.8  # Acceleration due to gravity
DAMPING = 0.8  # Damping factor for bouncing
DT = 0.1  # Time interval for simulation

# Initial conditions
position = HEIGHT
velocity = 0

# Function to update position and velocity
def update(frame):
    global position, velocity
    velocity += GRAVITY * DT
    position -= velocity * DT
    
    if position <= 0:  # Ball touches the ground
        position = 0
        velocity = -velocity * DAMPING  # Reverse velocity and apply damping

    ball.set_ydata([position])  # Update the ball's position
    return ball,

# Set up the figure and axis
fig, ax = plt.subplots()
ax.set_xlim(0, 1)
ax.set_ylim(0, HEIGHT + 1)

# Create the ball
ball, = ax.plot([0.5], [HEIGHT], 'o', markersize=20)

# Create the animation
ani = FuncAnimation(fig, update, frames=np.arange(0, 10, DT), interval=DT*1000)

# Display the animation
plt.show()
